Before (Set and save options):
  Save &shiftwidth, &tabstop, &softtabstop, &expandtab
  set shiftwidth=0 tabstop=4 softtabstop=6

After (Restore options):
  Restore &shiftwidth, &tabstop, &softtabstop, &expandtab

Given (Three characters):
  abc

Execute (Append <Tab> with expandtab after the characters):
  set expandtab
  execute 'normal' "$a\<Tab>"

Then (Assert that spaces are produced):
  AssertEqual "abc   ", getline('.')

Execute (Append <Tab> twice with expandtab after the characters):
  set expandtab
  execute 'normal' "$a\<Tab>\<Tab>"

Then (Assert that spaces are produced):
  AssertEqual "abc         ", getline('.')

Execute (Append <Tab> with noexpandtab after the characters):
  set noexpandtab
  execute 'normal' "$a\<Tab>"

Then (Assert that mixed tabs and spaces are produced):
  AssertEqual "abc\t  ", getline('.')

Execute (Append <Tab> twice with noexpandtab after the characters):
  set noexpandtab
  execute 'normal' "$a\<Tab>\<Tab>"

Then (Assert that mixed tabs and spaces are produced):
  AssertEqual "abc\t\t\t", getline('.')

Given (Three characters followed by a tab):
  abc	

Execute (Append <Tab> with expandtab after the tab):
  set expandtab
  execute 'normal' "$a\<Tab>"

Then (Assert that tabs are produced):
  AssertEqual "abc\t\t", getline('.')

Execute (Append <Tab> twice with expandtab after the tab):
  set expandtab
  execute 'normal' "$a\<Tab>\<Tab>"

Then (Assert that tabs are produced):
  AssertEqual "abc\t\t\t", getline('.')

Execute (Append <Tab> with noexpandtab after the tab):
  set noexpandtab
  execute 'normal' "$a\<Tab>"

Then (Assert that mixed tabs and spaces are produced):
  AssertEqual "abc\t  ", getline('.')

Execute (Append <Tab> twice with noexpandtab after the tab):
  set noexpandtab
  execute 'normal' "$a\<Tab>\<Tab>"

Then (Assert that mixed tabs and spaces are produced):
  AssertEqual "abc\t\t\t", getline('.')

Given (Three characters followed by a space):
  abc 

Execute (Append <Tab> with expandtab after the space):
  set expandtab
  execute 'normal' "$a\<Tab>"

Then (Assert that spaces are produced):
  AssertEqual "abc   ", getline('.')

Execute (Append <Tab> twice with expandtab after the space):
  set expandtab
  execute 'normal' "$a\<Tab>\<Tab>"

Then (Assert that spaces are produced):
  AssertEqual "abc         ", getline('.')

Execute (Append <Tab> with noexpandtab after the space):
  set noexpandtab
  execute 'normal' "$a\<Tab>"

Then (Assert that mixed tabs and spaces are produced):
  AssertEqual "abc\t  ", getline('.')

Execute (Append <Tab> twice with noexpandtab after the space):
  set noexpandtab
  execute 'normal' "$a\<Tab>\<Tab>"

Then (Assert that mixed tabs and spaces are produced):
  AssertEqual "abc\t\t\t", getline('.')
